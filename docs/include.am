# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

EXTRA_DIST+= \
	     docs/_static \
	     docs/_templates \
	     docs/conf.py \
	     ${top_srcdir}/docs/*.rst

AUTO_PAGES= \
	    memcached_increment.pop \
	    memcached_increment_with_initial.pop \
	    memcached_decrement.pop \
	    memcached_decrement_with_initial.pop
BUILT_SOURCES += ${AUTO_PAGES}

BEHAVIOR_PAGES= \
		memcached_behavior_get.pop \
		memcached_behavior_set.pop
BUILT_SOURCES += ${BEHAVIOR_PAGES}

CALLBACK_PAGES= \
		memcached_callback_get.pop \
		memcached_callback_set.pop
BUILT_SOURCES += ${CALLBACK_PAGES}

CREATE_PAGES= \
	      memcached_clone.pop \
	      memcached_create.pop \
	      memcached_free.pop \
	      memcached_servers_reset.pop
BUILT_SOURCES += ${CREATE_PAGES}

DELETE_PAGES= \
	      memcached_delete.pop \
	      memcached_delete_by_key.pop
BUILT_SOURCES += ${DELETE_PAGES}

GENERIC_PAGES= \
	       libmemcached.pop \
	       libmemcached_examples.pop \
	       libmemcachedutil.pop \
	       memcached_analyze.pop \
	       memcached_dump.pop \
	       memcached_flush.pop \
	       memcached_flush_buffers.pop \
	       memcached_generate_hash_value.pop \
	       memcached_quit.pop \
	       memcached_strerror.pop \
	       memcached_verbosity.pop \
	       memcapable.pop \
	       memcat.pop \
	       memcp.pop \
	       memdump.pop \
	       memerror.pop \
	       memflush.pop \
	       memrm.pop \
	       memaslap.pop \
	       memslap.pop \
	       memstat.pop
BUILT_SOURCES += ${GENERIC_PAGES}

GET_PAGES= \
	   memcached_get.pop \
	   memcached_get_by_key.pop \
	   memcached_fetch_result.pop \
	   memcached_fetch_execute.pop \
	   memcached_mget.pop \
	   memcached_mget_by_key.pop \
	   memcached_mget_execute.pop \
	   memcached_mget_execute_by_key.pop \
	   memcached_fetch.pop
BUILT_SOURCES += ${GET_PAGES}

MEMORY_ALLOCATORS_PAGES= \
			 memcached_get_memory_allocators.pop \
			 memcached_set_memory_allocators.pop \
			 memcached_set_memory_allocators_context.pop
BUILT_SOURCES += ${MEMORY_ALLOCATORS_PAGES}

POOL_PAGES= \
	    memcached_pool_behavior_get.pop \
	    memcached_pool_behavior_set.pop \
	    memcached_pool_create.pop \
	    memcached_pool_destroy.pop \
	    memcached_pool_pop.pop \
	    memcached_pool_push.pop
BUILT_SOURCES += ${POOL_PAGES}

RESULT_PAGES= \
	      memcached_result_cas.pop \
	      memcached_result_create.pop \
	      memcached_result_flags.pop \
	      memcached_result_free.pop \
	      memcached_result_key_length.pop \
	      memcached_result_key_value.pop \
	      memcached_result_length.pop \
	      memcached_result_st.pop \
	      memcached_result_value.pop
BUILT_SOURCES += ${RESULT_PAGES}


SERVER_PAGES= \
	      memcached_server_count.pop \
	      memcached_server_cursor.pop \
	      memcached_server_list.pop \
	      memcached_server_add.pop \
	      memcached_server_add_unix_socket.pop \
	      memcached_server_push.pop
BUILT_SOURCES += ${SERVER_PAGES}

SERVER_ST_PAGES= \
		 memcached_server_list_free.pop \
		 memcached_server_list_count.pop \
		 memcached_server_list_append.pop \
		 memcached_servers_parse.pop
BUILT_SOURCES += ${SERVER_ST_PAGES}

SET_PAGES= \
	   memcached_set.pop \
	   memcached_set_by_key.pop \
	   memcached_cas.pop \
	   memcached_cas_by_key.pop \
	   memcached_replace.pop \
	   memcached_replace_by_key.pop \
	   memcached_add.pop \
	   memcached_add_by_key.pop \
	   memcached_prepend.pop \
	   memcached_prepend_by_key.pop \
	   memcached_append.pop \
	   memcached_append_by_key.pop
BUILT_SOURCES += ${SET_PAGES}

STATS_PAGES= \
	     memcached_stat.pop \
	     memcached_stat_execute.pop\
	     memcached_stat_get_keys.pop\
	     memcached_stat_get_value.pop \
	     memcached_stat_servername.pop
BUILT_SOURCES += ${STATS_PAGES}

USER_DATA_PAGES= \
		 memcached_get_user_data.pop \
		 memcached_set_user_data.pop
BUILT_SOURCES += ${USER_DATA_PAGES}

VERSION_PAGES= \
	       memcached_version.pop \
	       memcached_lib_version.pop
BUILT_SOURCES += ${VERSION_PAGES}


#
# These are for libhashkit
#
HASHKIT_CREATE_PAGES= \
		      hashkit_is_allocated.pop \
		      hashkit_create.pop \
		      hashkit_clone.pop \
		      hashkit_free.pop
BUILT_SOURCES += ${HASHKIT_CREATE_PAGES}

HASHKIT_FUNCTIONS_PAGES= \
			 hashkit_crc32.pop \
			 hashkit_fnv1_32.pop \
			 hashkit_fnv1_64.pop \
			 hashkit_fnv1a_32.pop \
			 hashkit_fnv1a_64.pop \
			 hashkit_functions.pop \
			 hashkit_hsieh.pop \
			 hashkit_jenkins.pop \
			 hashkit_md5.pop \
			 hashkit_murmur.pop
BUILT_SOURCES += ${HASHKIT_FUNCTIONS_PAGES}

HASHKIT_ST_PAGES= \
		  hashkit_value.pop
BUILT_SOURCES += ${HASHKIT_ST_PAGES}

# Makefile for Sphinx documentation
#

SPHINXOPTS    = ${SPHINX_WARNINGS} -D release=${PANDORA_RELEASE_VERSION}
PAPER         =
SPHINX_BUILDDIR      = ${top_builddir}/docs

# Internal variables.
PAPEROPT_a4     = -D latex_paper_size=a4
PAPEROPT_letter = -D latex_paper_size=letter
ALLSPHINXOPTS   = -d $(SPHINX_BUILDDIR)/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) ${top_srcdir}/docs

.PHONY: help clean html dirhtml singlehtml pickle json htmlhelp qthelp devhelp epub latex latexpdf text man changes linkcheck doctest

if HAVE_RECENT_SPHINX

man_MANS+= \
           docs/man/hashkit_create.3 \
	   docs/man/hashkit_functions.3 \
	   docs/man/hashkit_value.3 \
	   docs/man/libmemcached_examples.3 \
	   docs/man/libmemcached.3 \
	   docs/man/libmemcachedutil.3 \
	   docs/man/memcached_analyze.3 \
	   docs/man/memcached_auto.3 \
	   docs/man/memcached_behavior.3 \
	   docs/man/memcached_callback.3 \
	   docs/man/memcached_create.3 \
	   docs/man/memcached_delete.3 \
	   docs/man/memcached_dump.3 \
	   docs/man/memcached_flush_buffers.3 \
	   docs/man/memcached_flush.3 \
	   docs/man/memcached_generate_hash_value.3 \
	   docs/man/memcached_get.3 \
	   docs/man/memcached_memory_allocators.3 \
	   docs/man/memcached_pool.3 \
	   docs/man/memcached_quit.3 \
	   docs/man/memcached_result_st.3 \
	   docs/man/memcached_sasl.3 \
	   docs/man/memcached_servers.3 \
	   docs/man/memcached_server_st.3 \
	   docs/man/memcached_set.3 \
	   docs/man/memcached_stats.3 \
	   docs/man/memcached_strerror.3 \
	   docs/man/memcached_user_data.3 \
	   docs/man/memcached_verbosity.3 \
	   docs/man/memcached_version.3 \
	   docs/man/memcapable.1 \
	   docs/man/memcat.1 \
	   docs/man/memcp.1 \
	   docs/man/memdump.1 \
	   docs/man/memerror.1 \
	   docs/man/memflush.1 \
	   docs/man/memrm.1 \
	   docs/man/memslap.1 \
	   docs/man/memstat.1

DISTCLEANFILES+= \
                 docs/man/hashkit_create.3 \
		 docs/man/hashkit_functions.3 \
		 docs/man/hashkit_value.3 \
		 docs/man/libmemcached_examples.3 \
		 docs/man/libmemcached.3 \
		 docs/man/libmemcachedutil.3 \
		 docs/man/memcached_analyze.3 \
		 docs/man/memcached_auto.3 \
		 docs/man/memcached_behavior.3 \
		 docs/man/memcached_callback.3 \
		 docs/man/memcached_create.3 \
	         docs/man/memcached_delete.3 \
		 docs/man/memcached_dump.3 \
		 docs/man/memcached_flush_buffers.3 \
		 docs/man/memcached_flush.3 \
		 docs/man/memcached_generate_hash_value.3 \
		 docs/man/memcached_get.3 \
		 docs/man/memcached_memory_allocators.3 \
		 docs/man/memcached_pool.3 \
		 docs/man/memcached_quit.3 \
		 docs/man/memcached_result_st.3 \
		 docs/man/memcached_sasl.3 \
		 docs/man/memcached_servers.3 \
		 docs/man/memcached_server_st.3 \
		 docs/man/memcached_set.3 \
		 docs/man/memcached_stats.3 \
		 docs/man/memcached_strerror.3 \
		 docs/man/memcached_user_data.3 \
		 docs/man/memcached_verbosity.3 \
		 docs/man/memcached_version.3 \
		 docs/man/memcapable.1 \
		 docs/man/memcat.1 \
		 docs/man/memcp.1 \
		 docs/man/memdump.1 \
		 docs/man/memerror.1 \
		 docs/man/memflush.1 \
		 docs/man/memrm.1 \
		 docs/man/memslap.1 \
		 docs/man/memstat.1

man_MANS+= \
           memcached_destroy_sasl_auth_data.3 \
           memcached_get_sasl_callbacks.3 \
           memcached_sasl_set_auth_data.3 \
           memcached_set_sasl_callbacks.3

HTML_FILES+= \
           memcached_destroy_sasl_auth_data.html \
           memcached_get_sasl_callbacks.html \
           memcached_sasl_set_auth_data.html \
           memcached_set_sasl_callbacks.html

SASL_PAGES= \
           memcached_destroy_sasl_auth_data.rst \
           memcached_get_sasl_callbacks.rst \
           memcached_sasl_set_auth_data.rst \
           memcached_set_sasl_callbacks.rst
BUILT_SOURCES += ${SASL_PAGES}

docs/man/hashkit_create.3: man
docs/man/hashkit_functions.3: man
docs/man/hashkit_value.3: man
docs/man/libmemcached_examples.3: man
docs/man/libmemcached.3: man
docs/man/libmemcachedutil.3: man
docs/man/memcached_analyze.3: man
docs/man/memcached_auto.3: man
docs/man/memcached_behavior.3: man
docs/man/memcached_callback.3: man
docs/man/memcached_create.3: man
docs/man/memcached_delete.3: man
docs/man/memcached_dump.3: man
docs/man/memcached_flush_buffers.3: man
docs/man/memcached_flush.3: man
docs/man/memcached_generate_hash_value.3: man
docs/man/memcached_get.3: man
docs/man/memcached_memory_allocators.3: man
docs/man/memcached_pool.3: man
docs/man/memcached_quit.3: man
docs/man/memcached_result_st.3: man
docs/man/memcached_sasl.3: man
docs/man/memcached_servers.3: man
docs/man/memcached_server_st.3: man
docs/man/memcached_set.3: man
docs/man/memcached_stats.3: man
docs/man/memcached_strerror.3: man
docs/man/memcached_user_data.3: man
docs/man/memcached_verbosity.3: man
docs/man/memcached_version.3: man
docs/man/memcapable.1: man
docs/man/memcat.1: man
docs/man/memcp.1: man
docs/man/memdump.1: man
docs/man/memerror.1: man
docs/man/memflush.1: man
docs/man/memrm.1: man
docs/man/memslap.1: man
docs/man/memstat.1: man
 
endif

if HAVE_SPHINX
sphinx-help:
	@echo "Please use \`make <target>' where <target> is one of"
	@echo "  html       to make standalone HTML files"
	@echo "  dirhtml    to make HTML files named index.html in directories"
	@echo "  singlehtml to make a single large HTML file"
	@echo "  pickle     to make pickle files"
	@echo "  json       to make JSON files"
	@echo "  htmlhelp   to make HTML files and a HTML help project"
	@echo "  qthelp     to make HTML files and a qthelp project"
	@echo "  devhelp    to make HTML files and a Devhelp project"
	@echo "  epub       to make an epub"
	@echo "  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter"
	@echo "  latexpdf   to make LaTeX files and run them through pdflatex"
	@echo "  text       to make text files"
	@echo "  man        to make manual pages"
	@echo "  changes    to make an overview of all changed/added/deprecated items"
	@echo "  linkcheck  to check all external links for integrity"
	@echo "  doctest    to run all doctests embedded in the documentation (if enabled)"

html-local:
	PYTHONPATH=${top_srcdir}/docs $(SPHINXBUILD) -b html $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/html
	@echo
	@echo "Build finished. The HTML pages are in $(SPHINX_BUILDDIR)/html."

dirhtml:
	PYTHONPATH=${top_srcdir}/docs $(SPHINXBUILD) -b dirhtml $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/dirhtml
	@echo
	@echo "Build finished. The HTML pages are in $(SPHINX_BUILDDIR)/dirhtml."

singlehtml:
	PYTHONPATH=${top_srcdir}/docs  $(SPHINXBUILD) -b singlehtml $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/singlehtml
	@echo
	@echo "Build finished. The HTML page is in $(SPHINX_BUILDDIR)/singlehtml."

pickle:
	PYTHONPATH=${top_srcdir}/docs  $(SPHINXBUILD) -b pickle $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/pickle
	@echo
	@echo "Build finished; now you can process the pickle files."

json:
	PYTHONPATH=${top_srcdir}/docs  $(SPHINXBUILD) -b json $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/json
	@echo
	@echo "Build finished; now you can process the JSON files."

htmlhelp:
	PYTHONPATH=${top_srcdir}/docs  $(SPHINXBUILD) -b htmlhelp $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/htmlhelp
	@echo
	@echo "Build finished; now you can run HTML Help Workshop with the" \
	      ".hhp project file in $(SPHINX_BUILDDIR)/htmlhelp."

qthelp:
	PYTHONPATH=${top_srcdir}/docs  $(SPHINXBUILD) -b qthelp $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/qthelp
	@echo
	@echo "Build finished; now you can run "qcollectiongenerator" with the" \
	      ".qhcp project file in $(SPHINX_BUILDDIR)/qthelp, like this:"
	@echo "# qcollectiongenerator $(SPHINX_BUILDDIR)/qthelp/Drizzle.qhcp"
	@echo "To view the help file:"
	@echo "# assistant -collectionFile $(SPHINX_BUILDDIR)/qthelp/Drizzle.qhc"

devhelp:
	PYTHONPATH=${top_srcdir}/docs  $(SPHINXBUILD) -b devhelp $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/devhelp
	@echo
	@echo "Build finished."
	@echo "To view the help file:"
	@echo "# mkdir -p $$HOME/.local/share/devhelp/Drizzle"
	@echo "# ln -s $(SPHINX_BUILDDIR)/devhelp $$HOME/.local/share/devhelp/Drizzle"
	@echo "# devhelp"

epub:
	PYTHONPATH=${top_srcdir}/docs  $(SPHINXBUILD) -b epub $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/epub
	@echo
	@echo "Build finished. The epub file is in $(SPHINX_BUILDDIR)/epub."

latex:
	PYTHONPATH=${top_srcdir}/docs  $(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/latex
	@echo
	@echo "Build finished; the LaTeX files are in $(SPHINX_BUILDDIR)/latex."
	@echo "Run \`make' in that directory to run these through (pdf)latex" \
	      "(use \`make latexpdf' here to do that automatically)."

latexpdf: latex
	PYTHONPATH=${top_srcdir}/docs  $(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/latex
	@echo "Running LaTeX files through pdflatex..."
	make -C $(SPHINX_BUILDDIR)/latex all-pdf
	@echo "pdflatex finished; the PDF files are in $(SPHINX_BUILDDIR)/latex."

text:
	PYTHONPATH=${top_srcdir}/docs  $(SPHINXBUILD) -b text $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/text
	@echo
	@echo "Build finished. The text files are in $(SPHINX_BUILDDIR)/text."

man:
	PYTHONPATH=${top_srcdir}/docs  $(SPHINXBUILD) -b man $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/man
	@echo
	@echo "Build finished. The manual pages are in $(SPHINX_BUILDDIR)/man."

changes:
	PYTHONPATH=${top_srcdir}/docs  $(SPHINXBUILD) -b changes $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/changes
	@echo
	@echo "The overview file is in $(SPHINX_BUILDDIR)/changes."

linkcheck:
	PYTHONPATH=${top_srcdir}/docs  $(SPHINXBUILD) -b linkcheck $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/linkcheck
	@echo
	@echo "Link check complete; look for any errors in the above output " \
	      "or in $(SPHINX_BUILDDIR)/linkcheck/output.txt."

doctest:
	PYTHONPATH=${top_srcdir}/docs  $(SPHINXBUILD) -b doctest $(ALLSPHINXOPTS) $(SPHINX_BUILDDIR)/doctest
	@echo "Testing of doctests in the sources finished, look at the " \
	      "results in $(SPHINX_BUILDDIR)/doctest/output.txt."
endif

${CREATE_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_create.pod ${top_builddir}/docs/$@

${SET_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_set.pod ${top_builddir}/docs/$@

${DELETE_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_delete.pod ${top_builddir}/docs/$@

${AUTO_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_auto.pod ${top_builddir}/docs/$@

${GET_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_get.pod ${top_builddir}/docs/$@

${SERVER_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_servers.pod ${top_builddir}/docs/$@

${SERVER_ST_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_server_st.pod ${top_builddir}/docs/$@

${GENERIC_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/$*.pod ${top_builddir}/docs/$@

${BEHAVIOR_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_behavior.pod ${top_builddir}/docs/$@

${CALLBACK_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_callback.pod ${top_builddir}/docs/$@

${STATS_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_stats.pod ${top_builddir}/docs/$@

${RESULT_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_result_st.pod ${top_builddir}/docs/$@

${VERSION_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_version.pod ${top_builddir}/docs/$@

${MEMORY_ALLOCATORS_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_memory_allocators.pod ${top_builddir}/docs/$@

${USER_DATA_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_user_data.pod ${top_builddir}/docs/$@

${POOL_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_pool.pod ${top_builddir}/docs/$@

${HASHKIT_CREATE_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/hashkit_create.pod ${top_builddir}/docs/$@


${HASHKIT_FUNCTIONS_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/hashkit_functions.pod ${top_builddir}/docs/$@

${HASHKIT_ST_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/hashkit_value.pod ${top_builddir}/docs/$@

${SASL_PAGES}:
	@rm -f $@
	ln -s ${top_srcdir}/docs/memcached_sasl.pod ${top_builddir}/docs/$@


