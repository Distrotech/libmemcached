.TH "MEMCACHED_DELETE_BY_KEY" "3" "April 08, 2011" "0.47" "libmemcached"
.SH NAME
memcached_delete_by_key \- libmemcached Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructeredText.
.
.sp
Delete a key
.SH LIBRARY
.sp
C Client Library for memcached (libmemcached, \-lmemcached)
.SH SYNOPSIS
.sp
.nf
.ft C
#include <libmemcached/memcached.h>

memcached_return_t
  memcached_delete (memcached_st *ptr,
                    const char *key, size_t key_length,
                    time_t expiration);

memcached_return_t
memcached_delete_by_key (memcached_st *ptr,
                         const char *master_key, size_t master_key_length,
                         const char *key, size_t key_length,
                         time_t expiration);
.ft P
.fi
.SH DESCRIPTION
.sp
memcached_delete() is used to delete a particular key.
memcached_delete_by_key() works the same, but it takes a master key to
find the given value.
.sp
Expiration works by placing the item into a delete queue, which means that
it won\(aqt possible to retrieve it by the "get" command, but "add" and
"replace" command with this key will also fail (the "set" command will
succeed, however). After the time passes, the item is finally deleted from server memory.
.sp
Please note the the Danga memcached server removed support for expiration in
the 1.4 version.
.SH RETURN
.sp
A value of type \fBmemcached_return_t\fP is returned
On success that value will be \fBMEMCACHED_SUCCESS\fP.
Use memcached_strerror() to translate this value to a printable string.
.sp
If you are using the non\-blocking mode of the library, success only
means that the message was queued for delivery.
.SH HOME
.sp
To find out more information please check:
\fI\%https://launchpad.net/libmemcached\fP
.SH AUTHOR
.sp
Brian Aker, <\fI\%brian@tangent.org\fP>
.SH SEE ALSO
.sp
memcached(1) libmemcached(3) memcached_strerror(3)
.SH AUTHOR
Brian Aker
.SH COPYRIGHT
2011, Brian Aker
.\" Generated by docutils manpage writer.
.\" 
.
